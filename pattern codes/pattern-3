def generate_pascals_triangle(n):
    triangle = [[1]]
    # Generate the next rows of Pascal's Triangle up to n rows
    for i in range(1, n):
        # Start each row with 1
        row = [1]
        # Calculate the values in between by summing up pairs from the previous row
        for j in range(1, i):
            row.append(triangle[i-1][j-1] + triangle[i-1][j])
        # End each row with 1
        row.append(1)
        triangle.append(row)

    # Print the triangle with proper spacing for alignment
    max_width = len(" ".join(map(str, triangle[-1])))  # The width of the last row as string
    for row in triangle:
        # Join row elements as a string
        row_str = " ".join(map(str, row))
        # Center-align each row for proper triangle shape
        print(row_str.center(max_width))

# Example usage
generate_pascals_triangle(5)
